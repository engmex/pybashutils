#!/usr/bin/env python
"""
detects uncommitted work/files in all git repos under a directory
"""
from pythonutils.ChDir import ChDir
from subprocess import run,PIPE
#
from pythonutils.gitcommon import codepath

def gitpushall(rdir):
  
    print('git uncommited work detection for all directories under {}'.format(rdir))
    dlist = [x for x in rdir.iterdir() if x.is_dir()]
    
    dir_topush = []
    for d in dlist:
        #%% check for uncommitted work
        dir_topush = _check_git_ret(['git','--no-pager','diff','HEAD'],d,dir_topush)
        #%%  check for uncommitted branches (?)
        dir_topush = _check_git_ret(['git','log','--branches','--not','--remotes'],d,dir_topush)
        #%% check for uncommitted files
        dir_topush = _check_git_ret(['git','ls-files','-o','-d','--exclude-standard'],d,dir_topush)

    return dir_topush

def _check_git_ret(cmd,d,dir_topush):
    assert isinstance(cmd,list)
    assert isinstance(dir_topush,list)
    
    with ChDir(d):
        ret = run(cmd,stdout=PIPE,timeout=10)
        
    if ret.stdout:
        print(ret.stdout.decode('utf8'))
        dir_topush.append(d)
        
    return dir_topush
    
if __name__ == '__main__':
    rdir = codepath()
    dir_topush = gitpushall(rdir)
    if dir_topush:
        print('detected changes under {}'.format(rdir))
        print('\n'.join((str(d) for d in dir_topush)))

# if [[ -n $(git --no-pager diff HEAD 2>/dev/null) ]]; then
  # git diff HEAD
  # git commit -a && git push
# elif [[ -n $1 ]]; then
  # git commit -a
  # git push
# elif [[ -n $(git log --branches --not --remotes) ]]; then
  # git log --branches --not --remotes && git push
# fi

# untrac=$(git ls-files -o -d --exclude-standard)
# if [[ -n $untrac ]]; then
    # echo $untrac
    # exit 1
# fi
